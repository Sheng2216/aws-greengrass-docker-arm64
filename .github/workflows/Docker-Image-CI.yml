name: Docker Image CI

on:
#  schedule:
#    - cron: '27 8 * * 6'
  push:
    branches: [ "master" ]
    
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'version to build'
        # Default value if no value is explicitly provided
        default: '2.5.4'
        # Input has to be provided for the workflow to run
        required: true


jobs:
  # define job to build and publish docker image
  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build image and push to Docker Hub and GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
#           # relative path to the place where source code with Dockerfile is located
#           context: ./src/samples/simple
          # Note: tags has to be all lower-case
          context: .
          platforms: linux/aarch64
          tags: 
            sheng2216/aws-iot-greengrass-rak:${{ github.event.inputs.name }}
#             oskardudycz/eventsourcing.nodejs.simple:latest 
#             ghcr.io/oskardudycz/eventsourcing.nodejs/simple:latest
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
